name: Branch Cut from DEVELOPMENT to RELEASE
on:
  workflow_dispatch:

jobs:
  branch_cut:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}  # Use App token instead

      - name: Configure Git
        run: |
          git config --global safe.directory $(pwd)
          git config --global user.email "branch-cut-bot-personaverse@noreply.github.com"
          git config --global user.name "Branch Cut Bot Personaverse"
          git config --global pull.rebase false
          git config --global core.longpaths true

      - name: Fetch all branches
        run: |
          git fetch --all
          
      - name: Handle RELEASE branch
        run: |
          if git show-ref --quiet refs/remotes/origin/RELEASE; then
            echo "RELEASE branch exists, checking out..."
            git checkout RELEASE
            git pull origin RELEASE
          else
            echo "Creating RELEASE branch from DEVELOPMENT"
            git checkout -b RELEASE
            git push --set-upstream origin RELEASE
          fi

      - name: Merge DEVELOPMENT into RELEASE
        run: |
          git config --list | grep user
          git merge origin/DEVELOPMENT --no-edit -m "üîÑ Merge latest from DEVELOPMENT into RELEASE"
          git push -f origin RELEASE

      - name: Check merge status
        run: |
          if [ $? -eq 0 ]; then
            echo "‚úÖ Successfully merged DEVELOPMENT into RELEASE"
          else
            echo "‚ùå Merge failed from DEVELOPMENT to RELEASE"
            exit 1
          fi